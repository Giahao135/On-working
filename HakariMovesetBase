local Atmosphere = game.Lighting.Atmosphere  Atmosphere.Density = 0.3

--[[Garou Color Changer !DELETE IF NOT NEEDED!]]

--[[LEFT ARM COLORS]]

local char = game.Players.LocalPlayer.Character
getgenv().LArmCol = char['Left Arm'].ChildAdded:Connect(function(pp)
if pp.Name == 'WaterPalm' then
for i,v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
v.Color =
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(124,252,0)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 0, 0))} -- Change Color (Red, Green, Blue)
end

pp:WaitForChild('WaterTrail').Color = 
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(124,252,0)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 0, 0))} -- Change Color (Red, Green, Blue)

end end)
--[[RIGHT ARM colors]]

getgenv().RArmCol = char['Right Arm'].ChildAdded:Connect(function(pp)
if pp.Name == 'WaterPalm' then
for i,v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
v.Color =
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(124,252,0)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 0, 0))} -- Change Color (Red, Green, Blue)
end
pp:WaitForChild('WaterTrail').Color = 
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(124,252,0)), -- Change Color (Red, Green, Blue) 
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(0, 0, 0))} -- Change Color (Red, Green, Blue)

end end)

--[[END OF GAROU COLORS]]

--[[SKIN TONE]]

-- Table of human-like skin tone colors (Hakari's darker skin tone)
local skinTones = {
    Color3.fromRGB(200, 150, 120), -- Darker medium tan
}

-- Function to change the player's skin tone
local function changeSkinTone(player)
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                -- Set the part's color to Hakari's skin tone
                part.Color = skinTones[math.random(1, #skinTones)]
            end
        end
    end
end

-- Connect to PlayerAdded event to change skin color on join
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        changeSkinTone(player)
    end)
end)

-- Optional: Change the color of existing players
for _, player in pairs(game.Players:GetPlayers()) do
    if player.Character then
        changeSkinTone(player)
    end
end

--[[SKIN TONE]]

--[[HAKARI FIT]]

-- if you wanna make them to change set to "true" if you don't wanna change set to "false"
local Shirt = true
local Pants = true
local ShirtId = 16793752679
local PantsId = 14827584004

-- don't change anything here unless you know
if Shirt then
for _, d in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
if d:IsA("Shirt") then
d.ShirtTemplate = "rbxassetid://" .. ShirtId
end
end
elseif Pants then
for _, d in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
if d:IsA("Pants") then
d.PantsTemplate = "rbxassetid://" .. PantsId
end
end
end

--[[HAKARI FIT]]

--[[HAIR REMOVE]]

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Function to remove hair
local function removeHair()
    for _, accessory in pairs(character:GetChildren()) do
        if accessory:IsA("Accessory") and accessory:FindFirstChild("Handle") then
            if accessory.Handle:FindFirstChild("Mesh") then
                accessory:Destroy()
            end
        end
    end
end

-- Remove hair when the character spawns
character:WaitForChild("Humanoid").Died:Connect(function()
    player.CharacterAdded:Connect(removeHair)
end)

-- Initial removal
removeHair()

--[[HAIR REMOVE]]

--[[HAKARIS HAIR]]

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head") -- Ensure the "Head" exists

-- Load the sword model
local swordModel = game:GetObjects("rbxassetid://17324815728")[1]

-- Ensure the sword model has a handle
local handle = swordModel:FindFirstChild("Handle") or swordModel:FindFirstChildWhichIsA("BasePart")
if not handle then
    error("The sword model must have a 'Handle' or main part to attach.")
end

-- Set the sword's parent to the character
swordModel.Parent = character

-- Weld the sword to the head
local weld = Instance.new("Weld")
weld.Part0 = head
weld.Part1 = handle

-- Adjust the sword's position and orientation to align properly with the head
weld.C0 = CFrame.new(0, 0.4, 0) * CFrame.Angles(0, math.rad(0), math.rad(0))
weld.Parent = head

-- Ensure the sword's orientation matches the intended alignment
handle.CFrame = head.CFrame * weld.C0

-- Confirm execution
print("Sword model aligned with the player's head!")

--[[HAKARIS HAIR]]

--[[HAKARI SHIRT]]

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local Torso = character:WaitForChild("Torso") -- R6 uses "Torso"

-- Load the sword model
local swordModel = game:GetObjects("rbxassetid://117565071143839")[1]

-- Ensure the sword model has a handle
local handle = swordModel:FindFirstChild("Handle") or swordModel:FindFirstChildWhichIsA("BasePart")
if not handle then
    error("The sword model must have a 'Handle' or main part to attach.")
end

-- Disable collisions on the sword parts
for _, part in pairs(swordModel:GetDescendants()) do
    if part:IsA("BasePart") then
        part.CanCollide = false
    end
end

-- Set the sword's parent to the character
swordModel.Parent = character

-- Weld the sword to the right arm
local weld = Instance.new("Weld")
weld.Part0 = Torso
weld.Part1 = handle

-- Adjust the sword's position and orientation to align properly with the hand
weld.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(0), math.rad(0))
weld.Parent = Torso

-- Ensure the sword's orientation matches the hand grip
handle.CFrame = Torso.CFrame * weld.C0

-- Confirm execution
print("Sword model aligned with the player's right hand, blade pointing forward, and noclip enabled!")

--Black fur--

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local Torso = character:WaitForChild("Torso") -- R6 uses "Torso"

-- Load the sword model
local swordModel = game:GetObjects("rbxassetid://134506208923733")[1]

-- Ensure the sword model has a handle
local handle = swordModel:FindFirstChild("Handle") or swordModel:FindFirstChildWhichIsA("BasePart")
if not handle then
    error("The sword model must have a 'Handle' or main part to attach.")
end

-- Disable collisions on the sword parts
for _, part in pairs(swordModel:GetDescendants()) do
    if part:IsA("BasePart") then
        part.CanCollide = false
    end
end

-- Set the sword's parent to the character
swordModel.Parent = character

-- Weld the sword to the right arm
local weld = Instance.new("Weld")
weld.Part0 = Torso
weld.Part1 = handle

-- Adjust the sword's position and orientation to align properly with the hand
weld.C0 = CFrame.new(0, 1.1, 0) * CFrame.Angles(0, math.rad(0), math.rad(0))
weld.Parent = Torso

-- Ensure the sword's orientation matches the hand grip
handle.CFrame = Torso.CFrame * weld.C0

-- Confirm execution
print("Sword model aligned with the player's right hand, blade pointing forward, and noclip enabled!")

--black fur--

--[[HAKARI SHIRT]]

--[[HAKARI HEAD]]

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local head = character:WaitForChild("Head") -- Ensure the "Head" exists

-- Load the sword model
local swordModel = game:GetObjects("rbxassetid://17883528855")[1]

-- Ensure the sword model has a handle
local handle = swordModel:FindFirstChild("Handle") or swordModel:FindFirstChildWhichIsA("BasePart")
if not handle then
    error("The sword model must have a 'Handle' or main part to attach.")
end

-- Set the sword's parent to the character
swordModel.Parent = character

-- Weld the sword to the head
local weld = Instance.new("Weld")
weld.Part0 = head
weld.Part1 = handle

-- Adjust the sword's position and orientation to align properly with the head
weld.C0 = CFrame.new(0, 0, 0) * CFrame.Angles(0, math.rad(0), math.rad(0))
weld.Parent = head

-- Ensure the sword's orientation matches the intended alignment
handle.CFrame = head.CFrame * weld.C0

-- Confirm execution
print("Sword model aligned with the player's head!")

--[[HAKARI HEAD]]

--Move & Ultimate Names

local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("1").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Restless Punches"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("2").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Shadow Blitz"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("3").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Stomp"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("4").Base

local ToolName = baseButton.ToolName


ToolName.Text = "8 Punches Page"


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")


local function findGuiAndSetText()

    local screenGui = playerGui:FindFirstChild("ScreenGui")

    if screenGui then

        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

        if magicHealthFrame then

            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")

            if textLabel then

                textLabel.Text = "DOMAIN EXPANSION"

            end

        end

    end

end


playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()

local Animation = 15957376722
local StartTime = 0 -- what duration it starts like video
local Speed = 1 -- animation speed
local Duration= 1.6 -- how much till the animation stops

local a = Instance.new("Animation")
a.AnimationId = "rbxassetid://" .. Animation
local p = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(a)
p:Play()
p.TimePosition = StartTime -- what duration it starts like video
p:AdjustSpeed(0.5)
delay(Duration, function() -- delete these 3 lines if you don't want to stop it or you can adjust 7 to less or longer to stop animation 
p:Stop()
end)

local Animation = 15957376722
local StartTime = 1 -- what duration it starts like video
local Speed = 1 -- animation speed
local Duration= 3.2 -- how much till the animation stops

local a = Instance.new("Animation")
a.AnimationId = "rbxassetid://" .. Animation
local p = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(a)
p:Play()
p.TimePosition = StartTime -- what duration it starts like video
p:AdjustSpeed(0.000000001)
delay(Duration, function() -- delete these 3 lines if you don't want to stop it or you can adjust 7 to less or longer to stop animation 
p:Stop()
end)

local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local head = character:WaitForChild("Head")

-- Save the current camera type and subject
local originalCameraType = camera.CameraType
local originalCameraSubject = camera.CameraSubject

-- Set the camera to Scriptable mode (cutscene mode)
camera.CameraType = Enum.CameraType.Scriptable

-- Calculate the camera's cutscene position
local radius = 10 -- Distance from the character to the camera
local angle = math.rad(160) -- 60 degrees forward
local offset = humanoidRootPart.CFrame:VectorToWorldSpace(Vector3.new(-radius * math.cos(angle), 2, -radius * math.sin(angle)))
local cutsceneCFrame = CFrame.new(head.Position + offset, head.Position)

-- Use TweenService for smooth transition
local TweenService = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(1.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) -- 1.5 seconds smooth transition

-- Create tween for the camera movement
local tween = TweenService:Create(camera, tweenInfo, {CFrame = cutsceneCFrame})
tween:Play()

-- Wait for the tween to finish
tween.Completed:Wait()

-- Pause at the cutscene position
wait(0.3)

-- Aqua color sequence (cyan and light blue)
local aqua = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0,255,0)), -- cyan
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0,255,0)) -- light aqua
}

local fx1 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.Attachment:Clone()
fx1.Parent = game.Players.LocalPlayer.Character["Right Arm"]
for _, child in ipairs(fx1:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(5) -- Emit 20 particles
    end
end

local fx2 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.a:Clone()
fx2.Parent = game.Players.LocalPlayer.Character["Right Arm"]
for _, child in ipairs(fx2:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(1) -- Emit 20 particles
    end
end

local fx3 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
fx3.Parent = game.Players.LocalPlayer.Character["Right Arm"]
for _, child in ipairs(fx3:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(1) -- Emit 1 particle
    end
end

local fx4 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].EyeEmit:Clone()
fx4.Parent = game.Players.LocalPlayer.Character["Head"]
for _, child in ipairs(fx4:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(0) -- Emit 20 particles
    end
end

local fx5 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.Attachment:Clone()
fx5.Parent = game.Players.LocalPlayer.Character["Left Arm"]
for _, child in ipairs(fx5:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(1) -- Emit 20 particles
    end
end

local fx6 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmBurst.a:Clone()
fx6.Parent = game.Players.LocalPlayer.Character["Left Arm"]
for _, child in ipairs(fx6:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(1) -- Emit 20 particles
    end
end

local fx7 = game.ReplicatedStorage.Resources.FiveSeasonsFX["CharFX"].ArmFX:Clone()
fx7.Parent = game.Players.LocalPlayer.Character["Left Arm"]
for _, child in ipairs(fx7:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        child.Color = aqua -- Change particle color to aqua
        child:Emit(0) -- Emit 1 particle
    end
end

wait(0)
fx3:Destroy()

wait(0)
fx7:Destroy()

wait(1.2)

-- Instantly return the camera to the player's position
camera.CFrame = humanoidRootPart.CFrame

-- Restore the camera type and subject to the player's default view
camera.CameraType = originalCameraType
camera.CameraSubject = originalCameraSubject

--[[Animations]]

--[[Move 3]]


local animationId = 12309835105 -- Move 4
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

        local random = math.random(1, 2)

        -- variant 1
        if random == 1 then
            local p = game.Players.LocalPlayer
            local Humanoid = p.Character:WaitForChild("Humanoid")

            for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end

            --Anim
            local AnimAnim = Instance.new("Animation")
            AnimAnim.AnimationId = "rbxassetid://14705929107"  -- Custom Animation 1
            local Anim = Humanoid:LoadAnimation(AnimAnim)
            local startTime = 1
            Anim:Play()
            Anim:AdjustSpeed(0)
            Anim.TimePosition = startTime
            Anim:AdjustSpeed(1.3)

        -- 2nd variant
        elseif random == 2 then
            local p = game.Players.LocalPlayer
            local Humanoid = p.Character:WaitForChild("Humanoid")

            for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
                animTrack:Stop()
            end

            --Anim
            local AnimAnim = Instance.new("Animation")
            AnimAnim.AnimationId = "rbxassetid://14719290328"
            local Anim = Humanoid:LoadAnimation(AnimAnim)
            local startTime = 2.6
            Anim:Play()
            Anim:AdjustSpeed(0)
            Anim.TimePosition = startTime
            Anim:AdjustSpeed(1.2)

          end
    end
end

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF MOVE 3 ANIM]]

--[[Move 1]]

local animationId = 12272894215


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18896229321"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0.1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

local function freezePlayer(player, duration)
    local character = player.Character
    if character and character:FindFirstChild("Humanoid") then
        local humanoid = character.Humanoid

        -- Temporarily set WalkSpeed and JumpPower to 0
        local originalWalkSpeed = humanoid.WalkSpeed
        local originalJumpPower = humanoid.JumpPower
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0

        -- Wait for the specified duration
        task.wait(duration)

        -- Restore WalkSpeed and JumpPower
        humanoid.WalkSpeed = originalWalkSpeed
        humanoid.JumpPower = originalJumpPower
    end
end

-- Example: Freeze the player for 2 seconds
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        -- Wait a moment to ensure the Humanoid is ready
        task.wait(1)
        freezePlayer(player, 2)
    end)
end)


    end

end

--[[END OF MOVE 1 ANIM]]

--[[Move 1 hit]]

local animationId = 12273188754


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18897695481"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.2)


delay(1.7, function()

    Anim:Stop()

local Test = game:GetService("ReplicatedStorage").Resources.SkyRuler.ThrowDown.Part.Attachment
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character["HumanoidRootPart"]


for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        
        child.Color = ColorSequence.new(Color3.new(0,100,0))
        child:Emit(5)
        child.Enabled = true
    end
end

--Destroy function
local function destroyTest()
    for _, child in ipairs(test:GetChildren()) do
        if child:IsA("ParticleEmitter") then
            child.Enabled = false -- Disable the particle emitter
        end
    end

    task.wait(2) -- Wait a couple of seconds for particles to finish
    test:Destroy() -- Destroy the cloned object
end

-- Call the destroy function after a delay
task.delay(0, destroyTest) -- Adjust the delay as needed

local Test = game:GetService("ReplicatedStorage").Resources.SkyRuler.ThrowDown.Part.Attachment
local test = Test:Clone()
test.Parent = game.Players.LocalPlayer.Character["HumanoidRootPart"]


for _, child in ipairs(test:GetChildren()) do
    if child:IsA("ParticleEmitter") then
        
        child.Color = ColorSequence.new(Color3.new(50,205,50))
        child:Emit(5)
        child.Enabled = true
    end
end

--Destroy function
local function destroyTest()
    for _, child in ipairs(test:GetChildren()) do
        if child:IsA("ParticleEmitter") then
            child.Enabled = false -- Disable the particle emitter
        end
    end

    task.wait(2) -- Wait a couple of seconds for particles to finish
    test:Destroy() -- Destroy the cloned object
end

-- Call the destroy function after a delay
task.delay(0, destroyTest) -- Adjust the delay as needed

task.wait(0)

local AnimAnim2 = Instance.new("Animation")

AnimAnim2.AnimationId = "rbxassetid://18896127525"

local Anim2 = Humanoid:LoadAnimation(AnimAnim2)


local startTime = 1.3


Anim:Stop()

Anim2:Play()

Anim2:AdjustSpeed(0)

Anim2.TimePosition = startTime

Anim2:AdjustSpeed(1.2)

end)


    end

end

--[[END OF MOVE 1 HIT ANIM]]

--[[Move 2]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12296882427


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13904634979"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(2.6)

--Variables
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = game.Workspace.CurrentCamera
local initialShakeDistance = 20 -- Starting distance for the shake (in studs)
local shakeSpeed = 0.0000000000000005 -- Time between each shake (in seconds) (reduced for more visible effect)
local shakeTimes = 1.5 -- Number of shakes
local distanceDecay = initialShakeDistance / shakeTimes -- How much the shake distance decreases each time

-- ParticleEmitter for the shaking teleport effect (optional)
local teleportParticle = Instance.new("ParticleEmitter")
teleportParticle.Texture = "rbxassetid://3570430495" -- Replace with your own texture
teleportParticle.Lifetime = NumberRange.new(0.1)
teleportParticle.Size = NumberSequence.new(1)
teleportParticle.Rate = 100
teleportParticle.Speed = NumberRange.new(50)
teleportParticle.Parent = humanoidRootPart

-- Sound Effect for the shaking teleportation (optional)
local teleportSound = Instance.new("Sound")
teleportSound.SoundId = "rbxassetid://123456789" -- Replace with your own sound asset ID
teleportSound.Parent = humanoidRootPart

-- VFX for additional particle effects
local Test = game:GetService("ReplicatedStorage").Resources.NinjaUlt.Start_Effects.Particles.Low
local test = Test:Clone()

-- Function to perform the shaking teleport
local function shakeTeleport()
    -- Disable camera following the player
    camera.CameraType = Enum.CameraType.Scriptable

    -- Store the current camera position
    local originalCameraPosition = camera.CFrame

    -- Play sound effect
    teleportSound:Play()

    -- Emit the custom particles (VFX)
    test.Parent = humanoidRootPart -- Attach the effect to the humanoidRootPart
    for _, child in ipairs(test:GetChildren()) do
        if child:IsA("ParticleEmitter") then
            child:Emit(10)
            child.Enabled = true
        end
    end

    -- Emit particles for the teleport effect
    teleportParticle:Emit(50)

    -- Shake back and forth, reducing distance each time
    local currentShakeDistance = initialShakeDistance
    for i = 1, shakeTimes do
        -- Teleport the player to the right
        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(currentShakeDistance, 0, 0)
        wait(shakeSpeed)  -- Wait a short time before moving again

        -- Teleport the player to the left
        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(-2 * currentShakeDistance, 0, 0)
        wait(shakeSpeed)

        -- Move back to the original position (middle)
        humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(currentShakeDistance, 0, 0)
        wait(shakeSpeed)

        -- Decrease the shake distance for the next cycle
        currentShakeDistance = currentShakeDistance - distanceDecay
        if currentShakeDistance <= 0 then
            currentShakeDistance = 0 -- Prevent negative distance
        end
    end

    -- Destroy the particle effect after shaking is done
    test:Destroy()

    -- Restore the camera to its original position and resume following the player
    camera.CFrame = originalCameraPosition
    camera.CameraType = Enum.CameraType.Custom
end

-- Call the shake teleport function
shakeTeleport()



    end

end

--[[END OF MOVE 2 ANIM]]

--[[Move 2 hit]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12296113986


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then


local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17278415853"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 2


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.9)


delay(2.1, function()

    Anim:Stop()

task.wait(0)

local AnimAnim2 = Instance.new("Animation")

AnimAnim2.AnimationId = "rbxassetid://18464372850"

local Anim2 = Humanoid:LoadAnimation(AnimAnim2)


local startTime = 2.2


Anim:Stop()

Anim2:Play()

Anim2:AdjustSpeed(0)

Anim2.TimePosition = startTime

Anim2:AdjustSpeed(0.6)

end)

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

-- Function to make the player fly upwards for 2 seconds
local function flyUpwards()
    -- Create a BodyPosition object
    local bodyPosition = Instance.new("BodyPosition")
    bodyPosition.MaxForce = Vector3.new(0, math.huge, 0) -- Apply unlimited force on the Y-axis
    bodyPosition.Position = humanoidRootPart.Position + Vector3.new(0, 80, 0) -- Set target position 80 studs above
    bodyPosition.Parent = humanoidRootPart -- Attach to the HumanoidRootPart

    -- Wait for 2 seconds
    wait(2)

    -- Remove the BodyPosition object
    bodyPosition:Destroy()
end

-- Function to enable noclip
local function enableNoclip()
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
    print("Noclip activated!")
end

-- Function to disable noclip
local function disableNoclip()
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    print("Noclip deactivated!")
end

-- Trigger fly and noclip actions
flyUpwards()
enableNoclip()

-- Noclip will remain activated forever
-- You can manually disable noclip later by calling disableNoclip()

Wait(0)

local r = game:GetService("ReplicatedStorage")
local p = game:GetService("Players").LocalPlayer
local workspace = game:GetService("Workspace")

local function m()
    local res = r:FindFirstChild("Resources")
    if not res then return end

    local k = res:FindFirstChild("Sorcerer")
    if not k then return end

    local j = k:FindFirstChild("WallFX")
    if not j then return end

    local s = j:FindFirstChild("FirstSlam")
    if not s or not s:IsA("BasePart") then return end

    -- Get player's position
    local playerPos = p.Character.HumanoidRootPart.Position
    
    -- Raycast from player's position downwards to find the floor
    local rayOrigin = playerPos
    local rayDirection = Vector3.new(0, -100, 0) -- Cast downwards to detect the ground

    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {p.Character}
    rayParams.FilterType = Enum.RaycastFilterType.Blacklist

    -- Perform the raycast
    local rayResult = workspace:Raycast(rayOrigin, rayDirection, rayParams)

    if rayResult then
        -- Raycast hit the floor, set the position for the VFX
        local groundPosition = rayResult.Position

        local c = s:Clone()

        -- Adjust orientation of the VFX part to lay flat on the floor
        local orientation = CFrame.new(groundPosition)
        local adjustedCFrame = orientation * CFrame.Angles(math.rad(90), 0, 0)  -- Adjusting the orientation to lay flat

        c.CFrame = adjustedCFrame  -- Position VFX on the ground and apply rotation
        c.Parent = workspace
        
        -- Emit particles from the VFX
        for _, a in pairs(c:GetDescendants()) do
            if a:IsA("Attachment") then
                for _, v in pairs(a:GetDescendants()) do
                    if v:IsA("ParticleEmitter") then
                        v:Emit(4) -- Emit one particle
                    end
                end
            end
        end
    else
        warn("No ground detected below the player.")
    end
end

m()


    end

end

--[[END OF MOVE 2 HIT ANIM]]

--[[Move 3 FAIL]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12307656616


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18253337048"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.4


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

--[[END OF MOVE 3 ANIM]]

--[[Move 4]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12351854556


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://id_here"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

--[[END OF MOVE 4 ANIM]]

--[[Move 4 hit]]


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 13603396939


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17799224866"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.6)


delay(1.5, function()

    Anim:Stop()

task.wait(0)

local AnimAnim2 = Instance.new("Animation")

AnimAnim2.AnimationId = "rbxassetid://15944317351"

local Anim2 = Humanoid:LoadAnimation(AnimAnim2)


local startTime = 1.8


Anim:Stop()

Anim2:Play()

Anim2:AdjustSpeed(0)

Anim2.TimePosition = startTime

Anim2:AdjustSpeed(1)

end)


    end

end

--[[END OF MOVE 4 HIT ANIM]]

--[[Wall combo]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://15943915877"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.05


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

--[[END OF WALL COMBO ANIM]]

--[[Ult Activation]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 18716153127


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18715986914 "

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.8


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.1)

    end

end
--[[END OF ULT ACTIVATION ANIM]]

--[[Dash]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://13294790250"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)


delay(1.8, function()

    Anim:Stop()

end)


    end

end

--[[END OF DASH ANIM]]

--[[Uppercut]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18253337048"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.4)


delay(1, function()

    Anim:Stop()

end)


    end

end

--[[END OF UPPERCUT ANIM]]

--[[Downslam]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18253337048"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(1)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

--[[END OF DOWNSLAM ANIM]]

--[[Punch anims]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local animationIdsToStop = {

    [17859015788] = true, --downslam finisher

    [10469493270] = true, --punch1

    [10469630950] = true, --punch2

    [10469639222] = true, --punch3

    [10469643643] = true, --punch4

}


local replacementAnimations = {

    ["10469493270"] = "rbxassetid://17889458563", --punch1

    ["10469630950"] = "rbxassetid://17889461810", --punch2

    ["10469639222"] = "rbxassetid://17889471098", --punch3

    ["10469643643"] = "rbxassetid://17889290569", --punch4

    ["17859015788"] = "rbxassetid://12684185971", --downslam finisher

    ["11365563255"] = "rbxassetid://14516273501" --punch idk

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end) 
